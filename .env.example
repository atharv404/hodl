# HODL Platform Configuration Template
# Copy this file to .env and update with your values

# =====================================
# Server Configuration
# =====================================
FLASK_HOST=0.0.0.0
FLASK_PORT=8001
FLASK_DEBUG=False
FLASK_ENV=production

# =====================================
# Database Configuration
# =====================================
DATABASE_PATH=db/bch.db
DATABASE_MODE=w  # w=write, ro=read-only

# For PostgreSQL (optional):
# DATABASE_URL=postgresql://user:password@host:5432/hodl

# =====================================
# Blockchain Network Configuration
# =====================================
NETWORK=testnet  # testnet or mainnet
BLOCKCHAIN_VERSION=0.1

# Mining Configuration
MINING_DIFFICULTY=1000000000
ENABLE_MINING=True

# =====================================
# Wallet Configuration
# =====================================
# Generate your keys with:
# python -c "from hodl import cryptogr as cg; k=cg.gen_keys(); print(f'PRIVATE_KEY={k[0].hex()}\nPUBLIC_KEY={k[1].hex()}')"

# Your wallet private key (keep secret!)
WALLET_PRIVATE_KEY=

# Your wallet public key
WALLET_PUBLIC_KEY=

# =====================================
# Security
# =====================================
SECRET_KEY=change-me-to-random-secret-key
API_KEY=your-api-key-here

# Enable HTTPS redirect (production only)
FORCE_HTTPS=False

# CORS Configuration
CORS_ORIGINS=*  # Change to specific origins in production

# =====================================
# Smart Contracts
# =====================================
SC_EXECUTOR=python  # python or js
SC_MAX_MEMORY=10485760  # 10 MB
SC_TIMEOUT=30  # seconds

# =====================================
# Logging
# =====================================
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE=logs/hodl.log
LOG_MAX_SIZE=10485760  # 10 MB
LOG_BACKUP_COUNT=5

# =====================================
# Performance
# =====================================
# Cache timeout in seconds
CACHE_TIMEOUT=300
CACHE_TYPE=simple  # simple, redis, memcached

# =====================================
# Monitoring & Analytics
# =====================================
# Sentry DSN for error tracking (optional)
SENTRY_DSN=

# Enable metrics collection
ENABLE_METRICS=False

# =====================================
# External Services (Optional)
# =====================================
# Bitcoin testnet RPC (if integrating with Bitcoin)
BITCOIN_RPC_URL=
BITCOIN_RPC_USER=
BITCOIN_RPC_PASSWORD=

# Redis for caching (optional)
REDIS_URL=redis://localhost:6379/0

# =====================================
# Development Settings
# =====================================
# Load demo data on startup
LOAD_DEMO_DATA=False

# Auto-create database
AUTO_CREATE_DB=True

# =====================================
# Deployment
# =====================================
DEPLOYMENT_PLATFORM=local  # local, vercel, railway, heroku, docker
